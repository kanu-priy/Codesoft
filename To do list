#include <iostream>
#include <vector>
#include <string>
#include <algorithm>

using namespace std;

struct Task {
    string description;
    bool completed;
};

class ToDoList {
private:
    vector<Task> tasks;

public:
    void addTask(const string& description) {
        tasks.push_back({description, false});
        cout << "Task added.\n";
    }

    void viewTasks() {
        if (tasks.empty()) {
            cout << "No tasks available.\n";
            return;
        }

        cout << "Tasks:\n";
        for (size_t i = 0; i < tasks.size(); ++i) {
            cout << i + 1 << ". ";
            if (tasks[i].completed)
                cout << "[X] ";
            else
                cout << "[ ] ";
            cout << tasks[i].description << endl;
        }
    }

    void markTaskCompleted(int index) {
        if (index < 1 || index > tasks.size()) {
            cout << "Invalid task number.\n";
            return;
        }

        tasks[index - 1].completed = true;
        cout << "Task marked as completed.\n";
    }

    void removeTask(int index) {
        if (index < 1 || index > tasks.size()) {
            cout << "Invalid task number.\n";
            return;
        }

        tasks.erase(tasks.begin() + index - 1);
        cout << "Task removed.\n";
    }
};

int main() {
    ToDoList todo;
    char choice;

    do {
        cout << "\nMenu:\n";
        cout << "1. Add Task\n";
        cout << "2. View Tasks\n";
        cout << "3. Mark Task as Completed\n";
        cout << "4. Remove Task\n";
        cout << "5. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case '1': {
                string task;
                cout << "Enter task description: ";
                cin.ignore();
                getline(cin, task);
                todo.addTask(task);
                break;
            }
            case '2':
                todo.viewTasks();
                break;
            case '3': {
                int index;
                cout << "Enter task number to mark as completed: ";
                cin >> index;
                todo.markTaskCompleted(index);
                break;
            }
            case '4': {
                int index;
                cout << "Enter task number to remove: ";
                cin >> index;
                todo.removeTask(index);
                break;
            }
            case '5':
                cout << "Exiting...\n";
                break;
            default:
                cout << "Invalid choice\n";
        }

    } while (choice != '5');

    return 0;
}


